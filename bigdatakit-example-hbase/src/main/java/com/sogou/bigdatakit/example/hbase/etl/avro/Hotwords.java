/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.sogou.bigdatakit.example.hbase.etl.avro;

import java.io.Serializable;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Hotwords extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, Serializable {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Hotwords\",\"namespace\":\"com.sogou.bigdatakit.example.hbase.etl.avro\",\"fields\":[{\"name\":\"pid\",\"type\":\"string\"},{\"name\":\"query\",\"type\":\"string\"},{\"name\":\"pv\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence pid;
  @Deprecated public java.lang.CharSequence query;
  @Deprecated public long pv;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Hotwords() {}

  /**
   * All-args constructor.
   */
  public Hotwords(java.lang.CharSequence pid, java.lang.CharSequence query, java.lang.Long pv) {
    this.pid = pid;
    this.query = query;
    this.pv = pv;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return pid;
    case 1: return query;
    case 2: return pv;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: pid = (java.lang.CharSequence)value$; break;
    case 1: query = (java.lang.CharSequence)value$; break;
    case 2: pv = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'pid' field.
   */
  public java.lang.CharSequence getPid() {
    return pid;
  }

  /**
   * Sets the value of the 'pid' field.
   * @param value the value to set.
   */
  public void setPid(java.lang.CharSequence value) {
    this.pid = value;
  }

  /**
   * Gets the value of the 'query' field.
   */
  public java.lang.CharSequence getQuery() {
    return query;
  }

  /**
   * Sets the value of the 'query' field.
   * @param value the value to set.
   */
  public void setQuery(java.lang.CharSequence value) {
    this.query = value;
  }

  /**
   * Gets the value of the 'pv' field.
   */
  public java.lang.Long getPv() {
    return pv;
  }

  /**
   * Sets the value of the 'pv' field.
   * @param value the value to set.
   */
  public void setPv(java.lang.Long value) {
    this.pv = value;
  }

  /** Creates a new Hotwords RecordBuilder */
  public static com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder newBuilder() {
    return new com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder();
  }
  
  /** Creates a new Hotwords RecordBuilder by copying an existing Builder */
  public static com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder newBuilder(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder other) {
    return new com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder(other);
  }
  
  /** Creates a new Hotwords RecordBuilder by copying an existing Hotwords instance */
  public static com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder newBuilder(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords other) {
    return new com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder(other);
  }
  
  /**
   * RecordBuilder for Hotwords instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Hotwords>
    implements org.apache.avro.data.RecordBuilder<Hotwords> {

    private java.lang.CharSequence pid;
    private java.lang.CharSequence query;
    private long pv;

    /** Creates a new Builder */
    private Builder() {
      super(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.pid)) {
        this.pid = data().deepCopy(fields()[0].schema(), other.pid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.query)) {
        this.query = data().deepCopy(fields()[1].schema(), other.query);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pv)) {
        this.pv = data().deepCopy(fields()[2].schema(), other.pv);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Hotwords instance */
    private Builder(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords other) {
            super(com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.SCHEMA$);
      if (isValidValue(fields()[0], other.pid)) {
        this.pid = data().deepCopy(fields()[0].schema(), other.pid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.query)) {
        this.query = data().deepCopy(fields()[1].schema(), other.query);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pv)) {
        this.pv = data().deepCopy(fields()[2].schema(), other.pv);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'pid' field */
    public java.lang.CharSequence getPid() {
      return pid;
    }
    
    /** Sets the value of the 'pid' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder setPid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.pid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'pid' field has been set */
    public boolean hasPid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'pid' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder clearPid() {
      pid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'query' field */
    public java.lang.CharSequence getQuery() {
      return query;
    }
    
    /** Sets the value of the 'query' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder setQuery(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.query = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'query' field has been set */
    public boolean hasQuery() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'query' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder clearQuery() {
      query = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'pv' field */
    public java.lang.Long getPv() {
      return pv;
    }
    
    /** Sets the value of the 'pv' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder setPv(long value) {
      validate(fields()[2], value);
      this.pv = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'pv' field has been set */
    public boolean hasPv() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'pv' field */
    public com.sogou.bigdatakit.example.hbase.etl.avro.Hotwords.Builder clearPv() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Hotwords build() {
      try {
        Hotwords record = new Hotwords();
        record.pid = fieldSetFlags()[0] ? this.pid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.query = fieldSetFlags()[1] ? this.query : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.pv = fieldSetFlags()[2] ? this.pv : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
